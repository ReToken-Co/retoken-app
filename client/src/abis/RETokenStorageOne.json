{
  "contractName": "RETokenStorageOne",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "valuationReport",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "legalContract",
          "type": "string"
        }
      ],
      "name": "RETokenID",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmt",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "USDT",
          "type": "uint256"
        }
      ],
      "name": "RETokenUSDT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MODERATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_tokenID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxy_contract",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdt_contract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"valuationReport\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"legalContract\",\"type\":\"string\"}],\"name\":\"RETokenID\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmt\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"USDT\",\"type\":\"uint256\"}],\"name\":\"RETokenUSDT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MODERATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy_contract\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt_contract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract provides the storage structure for the RETokenProxy contract using ERC1155 and Counters structure. It also allows this contract to hold ERC1155 tokens. VERSION: 2 (Ver.2) 1. Add Event to record any REToken/USDT pair transaction done in REToken\",\"events\":{\"RETokenID(uint256,uint256,address,string,string)\":{\"details\":\"Declaration of new Event to record created token details for REToken\",\"params\":{\"id\":\"- Unique token ID\",\"legalContract\":\"- File Hash of Legal Contract\",\"owner\":\"- Asset Owner wallet address\",\"totalSupply\":\"- Number of tokens for unique token ID\",\"valuationReport\":\"- File Hash of Valuation Report\"}},\"RETokenUSDT(uint256,uint256,address,address,uint256)\":{\"details\":\"Ver.2 Declaration of new Event to record all USDT transactions for REToken\",\"params\":{\"USDT\":\"- Total amount of USDT paid by buyer\",\"buyer\":\"- Buyer wallet address\",\"id\":\"- Unique token ID purchased\",\"seller\":\"- Seller wallet address\",\"tokenAmt\":\"- Number of tokens for unique token ID purchased\"}}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"stateVariables\":{\"MODERATOR\":{\"details\":\"Ver.1 Declaration of initial variables. 1. `MODERATOR` - Group of addresses possessing moderator authorization for AccessControl contract 2. `ADMIN_ROLE` - Group of addresses possessing admin authorization 3. `usdt_contract` - USDT Contract address 4. `usdtContract` - External connection to USDT Contract 5. `proxy_contract` - Proxy Contract address 6. `proxyContract` - External connection to Proxy Contract\"}},\"title\":\"RETokenStorage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/BCCode/retoken-app/client/src/contracts/RETokenStorageOne.sol\":\"RETokenStorageOne\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/BCCode/retoken-app/client/src/contracts/RETokenProxy.sol\":{\"keccak256\":\"0xec76c1b1b46117d4d2c449e876668bd786b704f2e11ade9eade755e7b04a51c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0a51e43b3f06ef4af3abcdef8a8778bfbdd861e2e3d6aaac7c6958d56e90393\",\"dweb:/ipfs/Qme654LNrTdPU6xsBXCQ2HeZUNmkLmTmmHvU7qKeyBxKrt\"]},\"/C/BCCode/retoken-app/client/src/contracts/RETokenStorage.sol\":{\"keccak256\":\"0x810d8159c430bb4565d70c314c155532e3c81ac2e517bc16397ad4374b49ecc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2a28a2d008989b4bcf7f56ac4f977251073f4bf683064f9770381c1cba925d8\",\"dweb:/ipfs/QmNRDWCMrxNrC3cMkVasKBQngPnipy9XEywoacHpBD1GCi\"]},\"/C/BCCode/retoken-app/client/src/contracts/RETokenStorageOne.sol\":{\"keccak256\":\"0xf59af32312bef09adbe2d9ea1dee91cecd340a20f02c278d0c7bde88df18b239\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f223c3fd88e313e414abc7a726c7e242601ed503ad1f78e5fb6d3b7b0af01d3\",\"dweb:/ipfs/QmeXKZAabyga4wbMvMDt4YokQGHk7VCRV73xzgjLLbLjLJ\"]},\"/C/BCCode/retoken-app/client/src/contracts/USDT.sol\":{\"keccak256\":\"0xb90d5f97457334acb184fd3469e46483b856b1a783dedfea6cfe4632e32dc5c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df32a931e23ce7cda2ca5e5961edcb163df802f185cc3467cfdbb5c077a6acf7\",\"dweb:/ipfs/QmXnikCtzRhcuDSNkaKzwofgqNDkd7HkT8GsRXLqjhtGLH\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x9c925137f241e06f551519a725f5441922ea18b954b28e1b77ee6b585f72d25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45cb9bef1ddd5535b5ab14bfb537ad3c7b2b111b18a92560e7ec769961a94f5a\",\"dweb:/ipfs/QmPuF3CDSHeRmASDUiQFnNKQVNXN1ZiX9sBXaadjPjH1mD\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0xfa41ffba099c579d78ed7630e5b04ae7c5b67f58e060a6cb7c6fcb37dfcf804e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://464d07e7c8ebb8b36319ac9085753a1f20377aa4058aec988920cddffd65c48c\",\"dweb:/ipfs/QmUadw4siLKcejf3iLTfmzUspCm9BrVtA9LBpPA7KHzPQY\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/ERC1155HolderUpgradeable.sol\":{\"keccak256\":\"0xa39fc4ccf34f340a85969deeb2a2c54fb0670092e23ce8c0c0960ba384552852\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f38816ebaa08aa038200a412f042db4aa0115fdc66470c624cb2872de3dde8de\",\"dweb:/ipfs/QmRToUF1zj196cK1mHjf61e6suoV4KvSuaeWwgPuPpctHs\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/ERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xa7e4da8a616c007d6595b8750332ba11fc9b7cabcf50459bc2dcdc673964486d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0788d1b2e429d8796e7ee23fa182fd5cff447b77469d7a73ffe317ef3ee4d06\",\"dweb:/ipfs/QmP84hfzXKRjzgq9pG5esE2WDyxopn1BCJEHFJMfiu2rec\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x98e919e6863c729c54152e98e582bb063d417ca443bc38f4036db768b7a27f41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bce248887a96f85cfa3aceca3e97d4c922efeeef47da5f43bf3255ed272f71d8\",\"dweb:/ipfs/QmdT5ab3atmG6oNSFGpViAUNG1nPSj1eXjCWTtbL1JNhE7\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/ERC165Upgradeable.sol\":{\"keccak256\":\"0xde103454b2999423b2235019fd80b7bb1d28156a531d8f8a5c7a4d832744b6a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd2f3fc3a2b8e5b29fb269b82af95b05667a5e0a69dad16590adef876ff81a8\",\"dweb:/ipfs/QmYAVNuiFf4ppu5uxMkFB5zHbxUdCiXwuRg56gw7ffnhvu\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/ERC20Upgradeable.sol\":{\"keccak256\":\"0x8f8894ee690b48e9c136e9c83d0cd4fe8f622dfeb7fc1f1493b127c1431d75b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3157287c87548c545213d1a5a9024962dd56bb46ced7ecac87c1c99e4ea0fb98\",\"dweb:/ipfs/QmVzjybQDCPQ2juHet9787UjWSoMjx8HTENj4mdQ5zrftC\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x2392b21b331e4e51770afd96dae9d54337d78c10ad3b365b892f5849594d6a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da0789261bfbfdeb7487b78c4a301c10c2efadb7813b6b6703441cb2847f158c\",\"dweb:/ipfs/QmbbhYTw4eN5AaTwmHyJxJQzE423FoeaupU4gDbgLdUfdD\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0x3398b45f8cacf8bbbe4bc1cea801d12287b854642e3ec85b305617b94c505092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad4979bce60c9f6d808af2bd78b5ed5d677301548f510958fb58b6c36ea5a9d6\",\"dweb:/ipfs/QmTxoRfStZT3WwZizZq6amNfFe4SU1eL7QLwUeVcfc3buk\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xb61d55329cc320c249aa52ff720ef345f3330b941907c0d5407f6afc5ec3bff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8b97ec875a50c36cdee15976ab4061dc63d6a20fd07d2fd3948e9592e7a27d3\",\"dweb:/ipfs/QmbaTdw7YgBmc9MDQwGfPnu7oe3sqgf4e7K1FtWj7md7t5\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/IERC165Upgradeable.sol\":{\"keccak256\":\"0x4784c3f8a520a739dd25d76f514833a653990902d0e21601aed45bda44c87524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://359411cc44a4499f37d46562ef3f348db443f9a699138c1797264d20b14697b7\",\"dweb:/ipfs/QmUmeQNUwve4MFCc1ace6zMnstqa8S9SZe1nXG9THcpQ5v\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/IERC20Upgradeable.sol\":{\"keccak256\":\"0xa1931c47a617014f858580db625aa0dcf343796f39acd4b5b51effc092a1f0a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbeb499bad52667b96dd7df8e9b1f583e8c07afaba0018a75e5b7ff6e777173\",\"dweb:/ipfs/QmPLJnuhEcWnpmhMHKsiuVHVxMwb5k6idYyjajbrtZLz5B\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/Proxy.sol\":{\"keccak256\":\"0xd77e680b91750e56a490ea4697b0b844f405f882c5cde48270b20b6e10db4efd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5877f2b47a976cdbf0dec721713efe5b93d5078647acf1e2755b20574903971c\",\"dweb:/ipfs/QmYeZ4G73aKvEvfJ9W3XfNu6Gi5tjyMWNXkTBr1kkiBddJ\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/utils/Address.sol\":{\"keccak256\":\"0xbc12565fd8313de475084b6cd97bbdd3276c7453b4bf5f9b35c27fdc12a6ee62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf30a585049c8d64c6ccfb120694dfe5565b33add17bb32833750525608ad5ac\",\"dweb:/ipfs/Qmabh4GQ2tge6dddmgM9pzZEZqfYMxWrbFxmE4is1pFkSE\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xff21e885c360a5b789e973eeb8976efce8101eba4147092c58fba8e7afecd297\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd8ee421dbdc796fe18dffd1d4aecfcaac05a45721e2aa8df261c77cf0ec8241\",\"dweb:/ipfs/QmXNT6Fvgd2XLpPe2nenHKyci1iBsab8ahEVVowijzsrEt\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x2ded6653a041b6ddfc3d297d6cd84bccb3e1aa167ae3a50495d5f03cf5ab0d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bb62e4b463df95f6730257c5f77457682735f74e3b6f5df3a617ec4a577c60a\",\"dweb:/ipfs/QmTHT7LktoRyzyqFCkGbkozp596r7XNMz7ggUxr3h8BP3P\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/utils/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x20714cf126a1a984613579156d3cbc726db8025d8400e1db1d2bb714edaba335\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d6e8cc57f51f6c73eccd5b2dbaf3d8486a35148fe0e8bea4b002fbf2a78f381\",\"dweb:/ipfs/QmawvgjwaqMxyfbFnjxfap1FZ1sPwVgGHaEC41whKdP7N4\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/utils/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"/C/BCCode/retoken-app/client/src/contracts/libraries/utils/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0dd1e9b19801e3e7d900fbf4182d81e1afd23ad7be39504e33df6bbcba91d724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e30d594df25d0651c2cd6f85d856e5fc9f3dbae68d017e1da33eb3c7e2f1ecc\",\"dweb:/ipfs/QmPgkV99jZr3Zs9ex8dJ5j22oX4wDuDtMCnXNy67bTwgAB\"]}},\"version\":1}",
  "bytecode": "0x608060405261001860ff61002e60201b611a4c1760201c565b6101005534801561002857600080fd5b5061003c565b600081600001549050919050565b6125808061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c806375e1583811610097578063d84e803811610066578063d84e80381461095d578063e985e9c514610991578063f23a6e6114610a0b578063f242432a14610b4d576100f4565b806375e1583814610665578063a22cb46514610699578063ad0cdd89146106e9578063bc197c8114610707576100f4565b80632eb2c2d6116100d35780632eb2c2d61461026557806334b4e625146104885780634e1273f4146104a657806375b238fc14610647576100f4565b8062fdd58e146100f957806301ffc9a71461015b5780630e89341c146101be575b600080fd5b6101456004803603604081101561010f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c5c565b6040518082815260200191505060405180910390f35b6101a66004803603602081101561017157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d3c565b60405180821515815260200191505060405180910390f35b6101ea600480360360208110156101d457600080fd5b8101908080359060200190929190505050610da4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022a57808201518184015260208101905061020f565b50505050905090810190601f1680156102575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610486600480360360a081101561027b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102d857600080fd5b8201836020820111156102ea57600080fd5b8035906020019184602083028401116401000000008311171561030c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561036c57600080fd5b82018360208201111561037e57600080fd5b803590602001918460208302840111640100000000831117156103a057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561040057600080fd5b82018360208201111561041257600080fd5b8035906020019184600183028401116401000000008311171561043457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e48565b005b6104906112d3565b6040518082815260200191505060405180910390f35b6105f0600480360360408110156104bc57600080fd5b81019080803590602001906401000000008111156104d957600080fd5b8201836020820111156104eb57600080fd5b8035906020019184602083028401116401000000008311171561050d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561056d57600080fd5b82018360208201111561057f57600080fd5b803590602001918460208302840111640100000000831117156105a157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506112f7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610633578082015181840152602081019050610618565b505050509050019250505060405180910390f35b61064f611409565b6040518082815260200191505060405180910390f35b61066d61142d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106e7600480360360408110156106af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611453565b005b6106f16115ec565b6040518082815260200191505060405180910390f35b610928600480360360a081101561071d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561077a57600080fd5b82018360208201111561078c57600080fd5b803590602001918460208302840111640100000000831117156107ae57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561080e57600080fd5b82018360208201111561082057600080fd5b8035906020019184602083028401116401000000008311171561084257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156108a257600080fd5b8201836020820111156108b457600080fd5b803590602001918460018302840111640100000000831117156108d657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115f3565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610965611608565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109f3600480360360408110156109a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061162e565b60405180821515815260200191505060405180910390f35b610b18600480360360a0811015610a2157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610a9257600080fd5b820183602082011115610aa457600080fd5b80359060200191846001830284011164010000000083111715610ac657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116c2565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610c5a600480360360a0811015610b6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610bd457600080fd5b820183602082011115610be657600080fd5b80359060200191846001830284011164010000000083111715610c0857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116d7565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806123fc602b913960400191505060405180910390fd5b6065600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060678054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e3c5780601f10610e1157610100808354040283529160200191610e3c565b820191906000526020600020905b815481529060010190602001808311610e1f57829003601f168201915b50505050509050919050565b8151835114610ea2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806125236028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610f28576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806124506025913960400191505060405180910390fd5b610f30611a5a565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610f765750610f7585610f70611a5a565b61162e565b5b610fcb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806124756032913960400191505060405180910390fd5b6000610fd5611a5a565b9050610fe5818787878787611a62565b60005b84518110156111b6576000858281518110610fff57fe5b60200260200101519050600085838151811061101757fe5b6020026020010151905061109e816040518060600160405280602a81526020016124a7602a91396065600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6a9092919063ffffffff16565b6065600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611155816065600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b2490919063ffffffff16565b6065600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610fe8565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561126657808201518184015260208101905061124b565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156112a857808201518184015260208101905061128d565b5050505090500194505050505060405180910390a46112cb818787878787611bac565b505050505050565b7f58c8e11deab7910e89bf18a1168c6e6ef28748f00fd3094549459f01cec5e0aa81565b60608151835114611353576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806124fa6029913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561136d57600080fd5b5060405190808252806020026020018201604052801561139c5781602001602082028036833780820191505090505b50905060005b84518110156113fe576113db8582815181106113ba57fe5b60200260200101518583815181106113ce57fe5b6020026020010151610c5c565b8282815181106113e757fe5b6020026020010181815250508060010190506113a2565b508091505092915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b60fb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8173ffffffffffffffffffffffffffffffffffffffff16611472611a5a565b73ffffffffffffffffffffffffffffffffffffffff1614156114df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806124d16029913960400191505060405180910390fd5b80606660006114ec611a5a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611599611a5a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6101005481565b600063bc197c8160e01b905095945050505050565b60fd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600063f23a6e6160e01b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561175d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806124506025913960400191505060405180910390fd5b611765611a5a565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806117ab57506117aa856117a5611a5a565b61162e565b5b611800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806124276029913960400191505060405180910390fd5b600061180a611a5a565b905061182a81878761181b88611f3b565b61182488611f3b565b87611a62565b6118a7836040518060600160405280602a81526020016124a7602a91396065600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6a9092919063ffffffff16565b6065600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061195e836065600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b2490919063ffffffff16565b6065600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611a44818787878787611fab565b505050505050565b600081600001549050919050565b600033905090565b505050505050565b6000838311158290611b17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611adc578082015181840152602081019050611ac1565b50505050905090810190601f168015611b095780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015611ba2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611bcb8473ffffffffffffffffffffffffffffffffffffffff166122b8565b15611f33578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611c83578082015181840152602081019050611c68565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611cc5578082015181840152602081019050611caa565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611d04578082015181840152602081019050611ce9565b50505050905090810190601f168015611d315780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015611d5657600080fd5b505af1925050508015611d8a57506040513d6020811015611d7657600080fd5b810190808051906020019092919050505060015b611e9457611d966122e9565b80611da15750611e43565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e08578082015181840152602081019050611ded565b50505050905090810190601f168015611e355780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806123a06034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611f31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806123d46028913960400191505060405180910390fd5b505b505050505050565b606080600167ffffffffffffffff81118015611f5657600080fd5b50604051908082528060200260200182016040528015611f855781602001602082028036833780820191505090505b5090508281600081518110611f9657fe5b60200260200101818152505080915050919050565b611fca8473ffffffffffffffffffffffffffffffffffffffff166122b8565b156122b0578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612083578082015181840152602081019050612068565b50505050905090810190601f1680156120b05780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b1580156120d357600080fd5b505af192505050801561210757506040513d60208110156120f357600080fd5b810190808051906020019092919050505060015b612211576121136122e9565b8061211e57506121c0565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561218557808201518184015260208101905061216a565b50505050905090810190601f1680156121b25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806123a06034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146122ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806123d46028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d10156122f95761239c565b60046000803e61230a6000516122dc565b6308c379a0811461231b575061239c565b60405160043d036004823e80513d602482011167ffffffffffffffff821117156123475750505061239c565b808201805167ffffffffffffffff81111561236657505050505061239c565b8060208301013d85018111156123815750505050505061239c565b61238a826122cb565b60208401016040528296505050505050505b9056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368a26469706673582212202931cb32212d27b6170e08a214530823c0ee13268f4f16abf2d078d8b1d40fdc64736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f45760003560e01c806375e1583811610097578063d84e803811610066578063d84e80381461095d578063e985e9c514610991578063f23a6e6114610a0b578063f242432a14610b4d576100f4565b806375e1583814610665578063a22cb46514610699578063ad0cdd89146106e9578063bc197c8114610707576100f4565b80632eb2c2d6116100d35780632eb2c2d61461026557806334b4e625146104885780634e1273f4146104a657806375b238fc14610647576100f4565b8062fdd58e146100f957806301ffc9a71461015b5780630e89341c146101be575b600080fd5b6101456004803603604081101561010f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c5c565b6040518082815260200191505060405180910390f35b6101a66004803603602081101561017157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d3c565b60405180821515815260200191505060405180910390f35b6101ea600480360360208110156101d457600080fd5b8101908080359060200190929190505050610da4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022a57808201518184015260208101905061020f565b50505050905090810190601f1680156102575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610486600480360360a081101561027b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102d857600080fd5b8201836020820111156102ea57600080fd5b8035906020019184602083028401116401000000008311171561030c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561036c57600080fd5b82018360208201111561037e57600080fd5b803590602001918460208302840111640100000000831117156103a057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561040057600080fd5b82018360208201111561041257600080fd5b8035906020019184600183028401116401000000008311171561043457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e48565b005b6104906112d3565b6040518082815260200191505060405180910390f35b6105f0600480360360408110156104bc57600080fd5b81019080803590602001906401000000008111156104d957600080fd5b8201836020820111156104eb57600080fd5b8035906020019184602083028401116401000000008311171561050d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561056d57600080fd5b82018360208201111561057f57600080fd5b803590602001918460208302840111640100000000831117156105a157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506112f7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610633578082015181840152602081019050610618565b505050509050019250505060405180910390f35b61064f611409565b6040518082815260200191505060405180910390f35b61066d61142d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106e7600480360360408110156106af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611453565b005b6106f16115ec565b6040518082815260200191505060405180910390f35b610928600480360360a081101561071d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561077a57600080fd5b82018360208201111561078c57600080fd5b803590602001918460208302840111640100000000831117156107ae57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561080e57600080fd5b82018360208201111561082057600080fd5b8035906020019184602083028401116401000000008311171561084257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156108a257600080fd5b8201836020820111156108b457600080fd5b803590602001918460018302840111640100000000831117156108d657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115f3565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610965611608565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109f3600480360360408110156109a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061162e565b60405180821515815260200191505060405180910390f35b610b18600480360360a0811015610a2157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610a9257600080fd5b820183602082011115610aa457600080fd5b80359060200191846001830284011164010000000083111715610ac657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116c2565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610c5a600480360360a0811015610b6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610bd457600080fd5b820183602082011115610be657600080fd5b80359060200191846001830284011164010000000083111715610c0857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116d7565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806123fc602b913960400191505060405180910390fd5b6065600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060678054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e3c5780601f10610e1157610100808354040283529160200191610e3c565b820191906000526020600020905b815481529060010190602001808311610e1f57829003601f168201915b50505050509050919050565b8151835114610ea2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806125236028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610f28576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806124506025913960400191505060405180910390fd5b610f30611a5a565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610f765750610f7585610f70611a5a565b61162e565b5b610fcb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806124756032913960400191505060405180910390fd5b6000610fd5611a5a565b9050610fe5818787878787611a62565b60005b84518110156111b6576000858281518110610fff57fe5b60200260200101519050600085838151811061101757fe5b6020026020010151905061109e816040518060600160405280602a81526020016124a7602a91396065600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6a9092919063ffffffff16565b6065600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611155816065600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b2490919063ffffffff16565b6065600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610fe8565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561126657808201518184015260208101905061124b565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156112a857808201518184015260208101905061128d565b5050505090500194505050505060405180910390a46112cb818787878787611bac565b505050505050565b7f58c8e11deab7910e89bf18a1168c6e6ef28748f00fd3094549459f01cec5e0aa81565b60608151835114611353576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806124fa6029913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561136d57600080fd5b5060405190808252806020026020018201604052801561139c5781602001602082028036833780820191505090505b50905060005b84518110156113fe576113db8582815181106113ba57fe5b60200260200101518583815181106113ce57fe5b6020026020010151610c5c565b8282815181106113e757fe5b6020026020010181815250508060010190506113a2565b508091505092915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b60fb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8173ffffffffffffffffffffffffffffffffffffffff16611472611a5a565b73ffffffffffffffffffffffffffffffffffffffff1614156114df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806124d16029913960400191505060405180910390fd5b80606660006114ec611a5a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611599611a5a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6101005481565b600063bc197c8160e01b905095945050505050565b60fd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600063f23a6e6160e01b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561175d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806124506025913960400191505060405180910390fd5b611765611a5a565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806117ab57506117aa856117a5611a5a565b61162e565b5b611800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806124276029913960400191505060405180910390fd5b600061180a611a5a565b905061182a81878761181b88611f3b565b61182488611f3b565b87611a62565b6118a7836040518060600160405280602a81526020016124a7602a91396065600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6a9092919063ffffffff16565b6065600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061195e836065600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b2490919063ffffffff16565b6065600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611a44818787878787611fab565b505050505050565b600081600001549050919050565b600033905090565b505050505050565b6000838311158290611b17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611adc578082015181840152602081019050611ac1565b50505050905090810190601f168015611b095780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015611ba2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611bcb8473ffffffffffffffffffffffffffffffffffffffff166122b8565b15611f33578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611c83578082015181840152602081019050611c68565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611cc5578082015181840152602081019050611caa565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611d04578082015181840152602081019050611ce9565b50505050905090810190601f168015611d315780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015611d5657600080fd5b505af1925050508015611d8a57506040513d6020811015611d7657600080fd5b810190808051906020019092919050505060015b611e9457611d966122e9565b80611da15750611e43565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e08578082015181840152602081019050611ded565b50505050905090810190601f168015611e355780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806123a06034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611f31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806123d46028913960400191505060405180910390fd5b505b505050505050565b606080600167ffffffffffffffff81118015611f5657600080fd5b50604051908082528060200260200182016040528015611f855781602001602082028036833780820191505090505b5090508281600081518110611f9657fe5b60200260200101818152505080915050919050565b611fca8473ffffffffffffffffffffffffffffffffffffffff166122b8565b156122b0578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612083578082015181840152602081019050612068565b50505050905090810190601f1680156120b05780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b1580156120d357600080fd5b505af192505050801561210757506040513d60208110156120f357600080fd5b810190808051906020019092919050505060015b612211576121136122e9565b8061211e57506121c0565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561218557808201518184015260208101905061216a565b50505050905090810190601f1680156121b25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806123a06034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146122ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806123d46028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d10156122f95761239c565b60046000803e61230a6000516122dc565b6308c379a0811461231b575061239c565b60405160043d036004823e80513d602482011167ffffffffffffffff821117156123475750505061239c565b808201805167ffffffffffffffff81111561236657505050505061239c565b8060208301013d85018111156123815750505050505061239c565b61238a826122cb565b60208401016040528296505050505050505b9056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368a26469706673582212202931cb32212d27b6170e08a214530823c0ee13268f4f16abf2d078d8b1d40fdc64736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1063:27",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "55:54:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "65:38:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "83:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "90:2:27",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "79:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:14:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "99:2:27",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "95:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "95:7:27"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "75:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "75:28:27"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "65:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "38:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "48:6:27",
                "type": ""
              }
            ],
            "src": "7:102:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "168:53:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "178:36:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "203:3:27",
                        "type": "",
                        "value": "224"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "208:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "199:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:15:27"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "178:8:27"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_224_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "149:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "159:8:27",
                "type": ""
              }
            ],
            "src": "115:106:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "270:790:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:9:27",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "312:5:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "286:14:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "286:16:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:4:27",
                        "type": "",
                        "value": "0x44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "283:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "283:26:27"
                  },
                  "nodeType": "YulIf",
                  "src": "280:2:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "347:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "350:1:27",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "329:14:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:23:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "329:23:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "361:45:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "403:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "397:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:8:27"
                      }
                    ],
                    "functionName": {
                      "name": "shift_right_224_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "372:24:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:34:27"
                  },
                  "variables": [
                    {
                      "name": "sig",
                      "nodeType": "YulTypedName",
                      "src": "365:3:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "446:9:27",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "448:5:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "sig",
                            "nodeType": "YulIdentifier",
                            "src": "428:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "433:10:27",
                            "type": "",
                            "value": "0x08c379a0"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "425:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "425:19:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "418:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:27:27"
                  },
                  "nodeType": "YulIf",
                  "src": "415:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "465:21:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "477:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "477:9:27"
                  },
                  "variables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "469:4:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "510:4:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "523:14:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "523:16:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "541:1:27",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "519:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:24:27"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "495:14:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:49:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:49:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "554:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "574:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "568:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:11:27"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "558:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "705:29:27",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "719:5:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "610:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:18:27",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "607:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "607:30:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "658:6:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "666:4:27",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "654:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "654:17:27"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "673:14:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "673:16:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "651:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:39:27"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "591:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:113:27"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "744:28:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "759:4:27"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "755:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:17:27"
                  },
                  "variables": [
                    {
                      "name": "msg",
                      "nodeType": "YulTypedName",
                      "src": "748:3:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "781:24:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "msg",
                        "nodeType": "YulIdentifier",
                        "src": "801:3:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "795:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "795:10:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "785:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "848:9:27",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "850:5:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "820:6:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "828:18:27",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "817:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:30:27"
                  },
                  "nodeType": "YulIf",
                  "src": "814:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "867:38:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "msg",
                            "nodeType": "YulIdentifier",
                            "src": "886:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "891:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "882:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "882:14:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "898:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "878:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:27:27"
                  },
                  "variables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "871:3:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "954:9:27",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "956:5:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "920:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "929:4:27"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "935:14:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "935:16:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "925:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "925:27:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "917:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:36:27"
                  },
                  "nodeType": "YulIf",
                  "src": "914:2:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "980:2:27",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "992:3:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "997:4:27",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "988:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "988:14:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1026:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "1004:21:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1004:29:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:50:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "973:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "973:62:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1044:10:27",
                  "value": {
                    "name": "msg",
                    "nodeType": "YulIdentifier",
                    "src": "1051:3:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "try_decode_error_message",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "266:3:27",
                "type": ""
              }
            ],
            "src": "227:833:27"
          }
        ]
      },
      "contents": "{\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        returndatacopy(0, 0, 4)\n        let sig := shift_right_224_unsigned(mload(0))\n        if iszero(eq(sig, 0x08c379a0)) { leave }\n\n        let data := mload(64)\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, returndatasize())) { leave }\n\n        mstore(64, add(add(msg, 0x20), round_up_to_mul_of_32(length)))\n        ret := msg\n    }\n\n}\n",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "588:2931:5:-:0;;;1686:19;:9;:17;;;;;:19;;:::i;:::-;1660:45;;588:2931;;;;;;;;;;;;1133:112:23;1198:7;1224;:14;;;1217:21;;1133:112;;;:::o;588:2931:5:-;;;;;;;",
  "deployedSourceMap": "588:2931:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3376:228:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1175:148:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3129:105:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::ii;:::-;;1165:58:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3761:530:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1230:60:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1297:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4359:306:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1660:45:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;712:201:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1356:37:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4732:166:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;533:173:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4965:897:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3376:228;3462:7;3508:1;3489:21;;:7;:21;;;;3481:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3575:9;:13;3585:2;3575:13;;;;;;;;;;;:22;3589:7;3575:22;;;;;;;;;;;;;;;;3568:29;;3376:228;;;;:::o;1175:148:12:-;1260:4;1283:20;:33;1304:11;1283:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1276:40;;1175:148;;;:::o;3129:105:11:-;3191:13;3223:4;3216:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3129:105;;;:::o;5934:1184::-;6188:7;:14;6174:3;:10;:28;6166:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6279:1;6265:16;;:2;:16;;;;6257:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6362:12;:10;:12::i;:::-;6354:20;;:4;:20;;;:60;;;;6378:36;6395:4;6401:12;:10;:12::i;:::-;6378:16;:36::i;:::-;6354:60;6333:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6501:16;6520:12;:10;:12::i;:::-;6501:31;;6543:60;6564:8;6574:4;6580:2;6584:3;6589:7;6598:4;6543:20;:60::i;:::-;6619:9;6614:349;6638:3;:10;6634:1;:14;6614:349;;;6669:10;6682:3;6686:1;6682:6;;;;;;;;;;;;;;6669:19;;6702:14;6719:7;6727:1;6719:10;;;;;;;;;;;;;;6702:27;;6766:123;6807:6;6766:123;;;;;;;;;;;;;;;;;:9;:13;6776:2;6766:13;;;;;;;;;;;:19;6780:4;6766:19;;;;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6744:9;:13;6754:2;6744:13;;;;;;;;;;;:19;6758:4;6744:19;;;;;;;;;;;;;;;:145;;;;6923:29;6945:6;6923:9;:13;6933:2;6923:13;;;;;;;;;;;:17;6937:2;6923:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;6903:9;:13;6913:2;6903:13;;;;;;;;;;;:17;6917:2;6903:17;;;;;;;;;;;;;;;:49;;;;6614:349;;6650:3;;;;;6614:349;;;;7008:2;6978:47;;7002:4;6978:47;;6992:8;6978:47;;;7012:3;7017:7;6978:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7036:75;7072:8;7082:4;7088:2;7092:3;7097:7;7106:4;7036:35;:75::i;:::-;5934:1184;;;;;;:::o;1165:58:5:-;1201:22;1165:58;:::o;3761:530:11:-;3934:16;3993:3;:10;3974:8;:15;:29;3966:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:30;4107:8;:15;4093:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:63;;4139:9;4134:120;4158:8;:15;4154:1;:19;4134:120;;;4213:30;4223:8;4232:1;4223:11;;;;;;;;;;;;;;4236:3;4240:1;4236:6;;;;;;;;;;;;;;4213:9;:30::i;:::-;4194:13;4208:1;4194:16;;;;;;;;;;;;;:49;;;;;4175:3;;;;;4134:120;;;;4271:13;4264:20;;;3761:530;;;;:::o;1230:60:5:-;1267:23;1230:60;:::o;1297:28::-;;;;;;;;;;;;;:::o;4359:306:11:-;4477:8;4461:24;;:12;:10;:12::i;:::-;:24;;;;4453:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4587:8;4542:18;:32;4561:12;:10;:12::i;:::-;4542:32;;;;;;;;;;;;;;;:42;4575:8;4542:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4639:8;4610:48;;4625:12;:10;:12::i;:::-;4610:48;;;4649:8;4610:48;;;;;;;;;;;;;;;;;;;;4359:306;;:::o;1660:45:5:-;;;;:::o;712:201:9:-;845:6;870:36;;;863:43;;712:201;;;;;;;:::o;1356:37:5:-;;;;;;;;;;;;;:::o;4732:166:11:-;4831:4;4854:18;:27;4873:7;4854:27;;;;;;;;;;;;;;;:37;4882:8;4854:37;;;;;;;;;;;;;;;;;;;;;;;;;4847:44;;4732:166;;;;:::o;533:173:9:-;643:6;668:31;;;661:38;;533:173;;;;;;;:::o;4965:897:11:-;5194:1;5180:16;;:2;:16;;;;5172:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5277:12;:10;:12::i;:::-;5269:20;;:4;:20;;;:60;;;;5293:36;5310:4;5316:12;:10;:12::i;:::-;5293:16;:36::i;:::-;5269:60;5248:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5407:16;5426:12;:10;:12::i;:::-;5407:31;;5449:96;5470:8;5480:4;5486:2;5490:21;5508:2;5490:17;:21::i;:::-;5513:25;5531:6;5513:17;:25::i;:::-;5540:4;5449:20;:96::i;:::-;5578:77;5602:6;5578:77;;;;;;;;;;;;;;;;;:9;:13;5588:2;5578:13;;;;;;;;;;;:19;5592:4;5578:19;;;;;;;;;;;;;;;;:23;;:77;;;;;:::i;:::-;5556:9;:13;5566:2;5556:13;;;;;;;;;;;:19;5570:4;5556:19;;;;;;;;;;;;;;;:99;;;;5685:29;5707:6;5685:9;:13;5695:2;5685:13;;;;;;;;;;;:17;5699:2;5685:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5665:9;:13;5675:2;5665:13;;;;;;;;;;;:17;5679:2;5665:17;;;;;;;;;;;;;;;:49;;;;5761:2;5730:46;;5755:4;5730:46;;5745:8;5730:46;;;5765:2;5769:6;5730:46;;;;;;;;;;;;;;;;;;;;;;;;5787:68;5818:8;5828:4;5834:2;5838;5842:6;5850:4;5787:30;:68::i;:::-;4965:897;;;;;;:::o;1133:112:23:-;1198:7;1224;:14;;;1217:21;;1133:112;;;:::o;821:104:22:-;874:15;908:10;901:17;;821:104;:::o;12652:235:11:-;;;;;;;:::o;5443:163:26:-;5529:7;5561:1;5556;:6;;5564:12;5548:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5598:1;5594;:5;5587:12;;5443:163;;;;;:::o;2701:175::-;2759:7;2778:9;2794:1;2790;:5;2778:17;;2818:1;2813;:6;;2805:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:1;2861:8;;;2701:175;;;;:::o;13662:800:11:-;13906:15;:2;:13;;;:15::i;:::-;13902:554;;;13969:2;13941:54;;;13996:8;14006:4;14012:3;14017:7;14026:4;13941:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13937:509;;;;:::i;:::-;;;;;;;;14322:6;14315:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13937:509;14369:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13937:509;14092:63;;;14080:75;;;:8;:75;;;;14076:172;;14179:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14076:172;14032:230;13902:554;13662:800;;;;;;:::o;14468:193::-;14534:16;14562:22;14601:1;14587:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14562:41;;14624:7;14613:5;14619:1;14613:8;;;;;;;;;;;;;:18;;;;;14649:5;14642:12;;;14468:193;;;:::o;12893:763::-;13112:15;:2;:13;;;:15::i;:::-;13108:542;;;13175:2;13147:49;;;13197:8;13207:4;13213:2;13217:6;13225:4;13147:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13143:497;;;;:::i;:::-;;;;;;;;13516:6;13509:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13143:497;13563:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13143:497;13291:58;;;13279:70;;;:8;:70;;;;13275:167;;13373:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13275:167;13231:225;13108:542;12893:763;;;;;;:::o;737:413:21:-;797:4;1000:12;1109:7;1097:20;1089:28;;1142:1;1135:4;:8;1128:15;;;737:413;;;:::o;7:102:27:-;;99:2;95:7;90:2;83:5;79:14;75:28;65:38;;55:54;;;:::o;115:106::-;;208:5;203:3;199:15;178:36;;168:53;;;:::o;227:833::-;;304:4;286:16;283:26;280:2;;;312:5;;280:2;350:1;347;344;329:23;372:34;403:1;397:8;372:34;:::i;:::-;433:10;428:3;425:19;415:2;;448:5;;;415:2;483;477:9;541:1;523:16;519:24;516:1;510:4;495:49;574:4;568:11;673:16;666:4;658:6;654:17;651:39;618:18;610:6;607:30;591:113;588:2;;;719:5;;;;;588:2;765:6;759:4;755:17;801:3;795:10;828:18;820:6;817:30;814:2;;;850:5;;;;;;;814:2;898:6;891:4;886:3;882:14;878:27;935:16;929:4;925:27;920:3;917:36;914:2;;;956:5;;;;;;;;914:2;1004:29;1026:6;1004:29;:::i;:::-;997:4;992:3;988:14;984:50;980:2;973:62;1051:3;1044:10;;270:790;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >= 0.7.4;\r\n\r\nimport \"./libraries/ERC1155Upgradeable.sol\";\r\nimport \"./libraries/ERC1155HolderUpgradeable.sol\";\r\nimport \"./libraries/utils/CountersUpgradeable.sol\";\r\nimport './USDT.sol';\r\nimport './RETokenProxy.sol';\r\n\r\n/**\r\n * @title RETokenStorage\r\n * @dev This contract provides the storage structure for the RETokenProxy contract\r\n * using ERC1155 and Counters structure. It also allows this contract to hold ERC1155 tokens.\r\n *\r\n * VERSION: 2 (Ver.2)\r\n * 1. Add Event to record any REToken/USDT pair transaction done in REToken\r\n */\r\ncontract RETokenStorageOne is ERC1155Upgradeable, ERC1155HolderUpgradeable {\r\n    \r\n    /**\r\n     * @dev Ver.1 Declaration of initial variables.\r\n     * 1. `MODERATOR` - Group of addresses possessing moderator authorization for AccessControl contract\r\n     * 2. `ADMIN_ROLE` - Group of addresses possessing admin authorization\r\n     * 3. `usdt_contract` - USDT Contract address\r\n     * 4. `usdtContract` - External connection to USDT Contract\r\n     * 5. `proxy_contract` - Proxy Contract address\r\n     * 6. `proxyContract` - External connection to Proxy Contract\r\n     */\r\n    bytes32 public constant MODERATOR = keccak256(\"MODERATOR\");\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    address public usdt_contract;\r\n    USDT usdtContract;\r\n    address payable public proxy_contract;\r\n    RETokenProxy proxyContract;\r\n\r\n    /**\r\n     * @dev Declaration of `_tokenID` variable as unique Token ID using Counters library\r\n     */\r\n    using CountersUpgradeable for CountersUpgradeable.Counter;\r\n    CountersUpgradeable.Counter internal _tokenIds;\r\n    uint256 public _tokenID = _tokenIds.current();\r\n\r\n    /**\r\n     * @dev Declaring `REToken` struct to store token details and\r\n     * mapping of Token ID to REToken Struct\r\n     */\r\n    struct REToken {\r\n        uint256 totalSupply;\r\n        address owner;\r\n        string valuationReport;\r\n        string legalContract;\r\n    }\r\n    mapping (uint256 => REToken) reToken;\r\n\r\n     /**\r\n     * @dev Declaration of new Event to record created token details for REToken\r\n     *\r\n     * @param id - Unique token ID\r\n     * @param totalSupply - Number of tokens for unique token ID\r\n     * @param owner - Asset Owner wallet address\r\n     * @param valuationReport - File Hash of Valuation Report\r\n     * @param legalContract - File Hash of Legal Contract\r\n     */\r\n    event RETokenID(uint256 indexed id, uint256 indexed totalSupply, address indexed owner, string valuationReport, string legalContract);\r\n\r\n    /**\r\n     * @dev Functions for ERC1155 Token\r\n     * 1. __ERC1155_init - Construct the ERC1155 token with URI\r\n     * 2. incrementTokenId() - Increase `tokenID` by 1 before minting new token\r\n     */\r\n    function __ERC1155_init() initializer internal {\r\n        __ERC1155_init(\"https://token-cdn-domain/{id}.json\");\r\n    }\r\n\r\n    function incrementTokenId() internal {\r\n        _tokenIds.increment();\r\n        _tokenID = _tokenIds.current();\r\n    }\r\n\r\n    /**\r\n     * @dev Ver.2 Declaration of new Event to record all USDT transactions for REToken\r\n     *\r\n     * @param id - Unique token ID purchased\r\n     * @param tokenAmt - Number of tokens for unique token ID purchased\r\n     * @param buyer - Buyer wallet address\r\n     * @param seller - Seller wallet address\r\n     * @param USDT - Total amount of USDT paid by buyer\r\n     */\r\n    event RETokenUSDT(uint256 indexed id, uint256 tokenAmt, address indexed buyer, address indexed seller, uint256 USDT);\r\n}",
  "sourcePath": "C:\\BCCode\\retoken-app\\client\\src\\contracts\\RETokenStorageOne.sol",
  "ast": {
    "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/RETokenStorageOne.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        1126
      ],
      "AddressUpgradeable": [
        3550
      ],
      "BaseUpgradeabilityProxy": [
        1191
      ],
      "ContextUpgradeable": [
        3595
      ],
      "CountersUpgradeable": [
        3645
      ],
      "ERC1155HolderUpgradeable": [
        1270
      ],
      "ERC1155ReceiverUpgradeable": [
        1325
      ],
      "ERC1155Upgradeable": [
        2360
      ],
      "ERC165Upgradeable": [
        2435
      ],
      "ERC20Upgradeable": [
        2965
      ],
      "EnumerableSetUpgradeable": [
        4137
      ],
      "IERC1155MetadataURIUpgradeable": [
        2980
      ],
      "IERC1155ReceiverUpgradeable": [
        3021
      ],
      "IERC1155Upgradeable": [
        3143
      ],
      "IERC165Upgradeable": [
        3155
      ],
      "IERC20Upgradeable": [
        3233
      ],
      "Initializable": [
        4203
      ],
      "OpenZeppelinUpgradesAddress": [
        3306
      ],
      "Proxy": [
        3285
      ],
      "RETokenProxy": [
        554
      ],
      "RETokenStorage": [
        648
      ],
      "RETokenStorageOne": [
        755
      ],
      "SafeMathUpgradeable": [
        4558
      ],
      "USDT": [
        818
      ]
    },
    "id": 756,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 650,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:25:5"
      },
      {
        "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/libraries/ERC1155Upgradeable.sol",
        "file": "./libraries/ERC1155Upgradeable.sol",
        "id": 651,
        "nodeType": "ImportDirective",
        "scope": 756,
        "sourceUnit": 2361,
        "src": "64:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/libraries/ERC1155HolderUpgradeable.sol",
        "file": "./libraries/ERC1155HolderUpgradeable.sol",
        "id": 652,
        "nodeType": "ImportDirective",
        "scope": 756,
        "sourceUnit": 1271,
        "src": "110:50:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/libraries/utils/CountersUpgradeable.sol",
        "file": "./libraries/utils/CountersUpgradeable.sol",
        "id": 653,
        "nodeType": "ImportDirective",
        "scope": 756,
        "sourceUnit": 3646,
        "src": "162:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/USDT.sol",
        "file": "./USDT.sol",
        "id": 654,
        "nodeType": "ImportDirective",
        "scope": 756,
        "sourceUnit": 819,
        "src": "215:20:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/RETokenProxy.sol",
        "file": "./RETokenProxy.sol",
        "id": 655,
        "nodeType": "ImportDirective",
        "scope": 756,
        "sourceUnit": 555,
        "src": "237:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 657,
              "name": "ERC1155Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2360,
              "src": "618:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Upgradeable_$2360",
                "typeString": "contract ERC1155Upgradeable"
              }
            },
            "id": 658,
            "nodeType": "InheritanceSpecifier",
            "src": "618:18:5"
          },
          {
            "baseName": {
              "id": 659,
              "name": "ERC1155HolderUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1270,
              "src": "638:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155HolderUpgradeable_$1270",
                "typeString": "contract ERC1155HolderUpgradeable"
              }
            },
            "id": 660,
            "nodeType": "InheritanceSpecifier",
            "src": "638:24:5"
          }
        ],
        "contractDependencies": [
          1270,
          1325,
          2360,
          2435,
          2980,
          3021,
          3143,
          3155,
          3595,
          4203
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 656,
          "nodeType": "StructuredDocumentation",
          "src": "269:317:5",
          "text": " @title RETokenStorage\n @dev This contract provides the storage structure for the RETokenProxy contract\n using ERC1155 and Counters structure. It also allows this contract to hold ERC1155 tokens.\n VERSION: 2 (Ver.2)\n 1. Add Event to record any REToken/USDT pair transaction done in REToken"
        },
        "fullyImplemented": true,
        "id": 755,
        "linearizedBaseContracts": [
          755,
          1270,
          1325,
          3021,
          2360,
          2980,
          3143,
          2435,
          3155,
          3595,
          4203
        ],
        "name": "RETokenStorageOne",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 661,
              "nodeType": "StructuredDocumentation",
              "src": "676:483:5",
              "text": " @dev Ver.1 Declaration of initial variables.\n 1. `MODERATOR` - Group of addresses possessing moderator authorization for AccessControl contract\n 2. `ADMIN_ROLE` - Group of addresses possessing admin authorization\n 3. `usdt_contract` - USDT Contract address\n 4. `usdtContract` - External connection to USDT Contract\n 5. `proxy_contract` - Proxy Contract address\n 6. `proxyContract` - External connection to Proxy Contract"
            },
            "functionSelector": "34b4e625",
            "id": 666,
            "mutability": "constant",
            "name": "MODERATOR",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "1165:58:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 662,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1165:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d4f44455241544f52",
                  "id": 664,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1211:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_58c8e11deab7910e89bf18a1168c6e6ef28748f00fd3094549459f01cec5e0aa",
                    "typeString": "literal_string \"MODERATOR\""
                  },
                  "value": "MODERATOR"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_58c8e11deab7910e89bf18a1168c6e6ef28748f00fd3094549459f01cec5e0aa",
                    "typeString": "literal_string \"MODERATOR\""
                  }
                ],
                "id": 663,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1201:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 665,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1201:22:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "75b238fc",
            "id": 671,
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "1230:60:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 667,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1230:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f524f4c45",
                  "id": 669,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1277:12:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  },
                  "value": "ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  }
                ],
                "id": 668,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1267:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 670,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1267:23:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "75e15838",
            "id": 673,
            "mutability": "mutable",
            "name": "usdt_contract",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "1297:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 672,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1297:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 675,
            "mutability": "mutable",
            "name": "usdtContract",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "1332:17:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_USDT_$818",
              "typeString": "contract USDT"
            },
            "typeName": {
              "id": 674,
              "name": "USDT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 818,
              "src": "1332:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_USDT_$818",
                "typeString": "contract USDT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "d84e8038",
            "id": 677,
            "mutability": "mutable",
            "name": "proxy_contract",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "1356:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 676,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1356:15:5",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 679,
            "mutability": "mutable",
            "name": "proxyContract",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "1400:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RETokenProxy_$554",
              "typeString": "contract RETokenProxy"
            },
            "typeName": {
              "id": 678,
              "name": "RETokenProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 554,
              "src": "1400:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RETokenProxy_$554",
                "typeString": "contract RETokenProxy"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 682,
            "libraryName": {
              "id": 680,
              "name": "CountersUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3645,
              "src": "1549:19:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CountersUpgradeable_$3645",
                "typeString": "library CountersUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1543:58:5",
            "typeName": {
              "id": 681,
              "name": "CountersUpgradeable.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3605,
              "src": "1573:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3605_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 684,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "1607:46:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$3605_storage",
              "typeString": "struct CountersUpgradeable.Counter"
            },
            "typeName": {
              "id": 683,
              "name": "CountersUpgradeable.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3605,
              "src": "1607:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3605_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ad0cdd89",
            "id": 689,
            "mutability": "mutable",
            "name": "_tokenID",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "1660:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 685,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1660:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "expression": {
                  "id": 686,
                  "name": "_tokenIds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 684,
                  "src": "1686:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$3605_storage",
                    "typeString": "struct CountersUpgradeable.Counter storage ref"
                  }
                },
                "id": 687,
                "isConstant": false,
                "isLValue": true,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "current",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 3616,
                "src": "1686:17:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3605_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3605_storage_ptr_$",
                  "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                }
              },
              "id": 688,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1686:19:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RETokenStorageOne.REToken",
            "id": 698,
            "members": [
              {
                "constant": false,
                "id": 691,
                "mutability": "mutable",
                "name": "totalSupply",
                "nodeType": "VariableDeclaration",
                "scope": 698,
                "src": "1871:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 690,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1871:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 693,
                "mutability": "mutable",
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 698,
                "src": "1901:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 692,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1901:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 695,
                "mutability": "mutable",
                "name": "valuationReport",
                "nodeType": "VariableDeclaration",
                "scope": 698,
                "src": "1925:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 694,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1925:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 697,
                "mutability": "mutable",
                "name": "legalContract",
                "nodeType": "VariableDeclaration",
                "scope": 698,
                "src": "1958:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 696,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1958:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "REToken",
            "nodeType": "StructDefinition",
            "scope": 755,
            "src": "1845:141:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 702,
            "mutability": "mutable",
            "name": "reToken",
            "nodeType": "VariableDeclaration",
            "scope": 755,
            "src": "1992:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_REToken_$698_storage_$",
              "typeString": "mapping(uint256 => struct RETokenStorageOne.REToken)"
            },
            "typeName": {
              "id": 701,
              "keyType": {
                "id": 699,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2001:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1992:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_REToken_$698_storage_$",
                "typeString": "mapping(uint256 => struct RETokenStorageOne.REToken)"
              },
              "valueType": {
                "id": 700,
                "name": "REToken",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 698,
                "src": "2012:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_REToken_$698_storage_ptr",
                  "typeString": "struct RETokenStorageOne.REToken"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 703,
              "nodeType": "StructuredDocumentation",
              "src": "2038:376:5",
              "text": " @dev Declaration of new Event to record created token details for REToken\n @param id - Unique token ID\n @param totalSupply - Number of tokens for unique token ID\n @param owner - Asset Owner wallet address\n @param valuationReport - File Hash of Valuation Report\n @param legalContract - File Hash of Legal Contract"
            },
            "id": 715,
            "name": "RETokenID",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2436:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 707,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2456:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2456:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 709,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2485:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "valuationReport",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2508:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2508:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "legalContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2532:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2435:118:5"
            },
            "src": "2420:134:5"
          },
          {
            "body": {
              "id": 725,
              "nodeType": "Block",
              "src": "2814:71:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "68747470733a2f2f746f6b656e2d63646e2d646f6d61696e2f7b69647d2e6a736f6e",
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ec884005926e7014d3c77574bc6bff7970c7c17a859b212d9b39ba93bdc6860",
                          "typeString": "literal_string \"https://token-cdn-domain/{id}.json\""
                        },
                        "value": "https://token-cdn-domain/{id}.json"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7ec884005926e7014d3c77574bc6bff7970c7c17a859b212d9b39ba93bdc6860",
                          "typeString": "literal_string \"https://token-cdn-domain/{id}.json\""
                        }
                      ],
                      "id": 721,
                      "name": "__ERC1155_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        726,
                        1391
                      ],
                      "referencedDeclaration": 1391,
                      "src": "2825:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:52:5"
                }
              ]
            },
            "documentation": {
              "id": 716,
              "nodeType": "StructuredDocumentation",
              "src": "2562:199:5",
              "text": " @dev Functions for ERC1155 Token\n 1. __ERC1155_init - Construct the ERC1155 token with URI\n 2. incrementTokenId() - Increase `tokenID` by 1 before minting new token"
            },
            "id": 726,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 719,
                "modifierName": {
                  "id": 718,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4186,
                  "src": "2793:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2793:11:5"
              }
            ],
            "name": "__ERC1155_init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2790:2:5"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2814:0:5"
            },
            "scope": 755,
            "src": "2767:118:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "2930:81:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 729,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "2941:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3605_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3628,
                      "src": "2941:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$3605_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3605_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:21:5"
                },
                {
                  "expression": {
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 734,
                      "name": "_tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "2973:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 735,
                          "name": "_tokenIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 684,
                          "src": "2984:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$3605_storage",
                            "typeString": "struct CountersUpgradeable.Counter storage ref"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3616,
                        "src": "2984:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3605_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3605_storage_ptr_$",
                          "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2984:19:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2973:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:30:5"
                }
              ]
            },
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "incrementTokenId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2918:2:5"
            },
            "returnParameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2930:0:5"
            },
            "scope": 755,
            "src": "2893:118:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 742,
              "nodeType": "StructuredDocumentation",
              "src": "3019:374:5",
              "text": " @dev Ver.2 Declaration of new Event to record all USDT transactions for REToken\n @param id - Unique token ID purchased\n @param tokenAmt - Number of tokens for unique token ID purchased\n @param buyer - Buyer wallet address\n @param seller - Seller wallet address\n @param USDT - Total amount of USDT paid by buyer"
            },
            "id": 754,
            "name": "RETokenUSDT",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "3417:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3417:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmt",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "3437:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3437:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "3455:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "3478:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3478:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 752,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "USDT",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "3502:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3502:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3416:99:5"
            },
            "src": "3399:117:5"
          }
        ],
        "scope": 756,
        "src": "588:2931:5"
      }
    ],
    "src": "35:3484:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/RETokenStorageOne.sol",
      "exportedSymbols": {
        "AccessControlUpgradeable": [
          1126
        ],
        "AddressUpgradeable": [
          3550
        ],
        "BaseUpgradeabilityProxy": [
          1191
        ],
        "ContextUpgradeable": [
          3595
        ],
        "CountersUpgradeable": [
          3645
        ],
        "ERC1155HolderUpgradeable": [
          1270
        ],
        "ERC1155ReceiverUpgradeable": [
          1325
        ],
        "ERC1155Upgradeable": [
          2360
        ],
        "ERC165Upgradeable": [
          2435
        ],
        "ERC20Upgradeable": [
          2965
        ],
        "EnumerableSetUpgradeable": [
          4137
        ],
        "IERC1155MetadataURIUpgradeable": [
          2980
        ],
        "IERC1155ReceiverUpgradeable": [
          3021
        ],
        "IERC1155Upgradeable": [
          3143
        ],
        "IERC165Upgradeable": [
          3155
        ],
        "IERC20Upgradeable": [
          3233
        ],
        "Initializable": [
          4203
        ],
        "OpenZeppelinUpgradesAddress": [
          3306
        ],
        "Proxy": [
          3285
        ],
        "RETokenProxy": [
          554
        ],
        "RETokenStorage": [
          648
        ],
        "RETokenStorageOne": [
          755
        ],
        "SafeMathUpgradeable": [
          4558
        ],
        "USDT": [
          818
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".4"
          ]
        },
        "id": 650,
        "name": "PragmaDirective",
        "src": "35:25:5"
      },
      {
        "attributes": {
          "SourceUnit": 2361,
          "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/libraries/ERC1155Upgradeable.sol",
          "file": "./libraries/ERC1155Upgradeable.sol",
          "scope": 756,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 651,
        "name": "ImportDirective",
        "src": "64:44:5"
      },
      {
        "attributes": {
          "SourceUnit": 1271,
          "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/libraries/ERC1155HolderUpgradeable.sol",
          "file": "./libraries/ERC1155HolderUpgradeable.sol",
          "scope": 756,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 652,
        "name": "ImportDirective",
        "src": "110:50:5"
      },
      {
        "attributes": {
          "SourceUnit": 3646,
          "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/libraries/utils/CountersUpgradeable.sol",
          "file": "./libraries/utils/CountersUpgradeable.sol",
          "scope": 756,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 653,
        "name": "ImportDirective",
        "src": "162:51:5"
      },
      {
        "attributes": {
          "SourceUnit": 819,
          "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/USDT.sol",
          "file": "./USDT.sol",
          "scope": 756,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 654,
        "name": "ImportDirective",
        "src": "215:20:5"
      },
      {
        "attributes": {
          "SourceUnit": 555,
          "absolutePath": "/C/BCCode/retoken-app/client/src/contracts/RETokenProxy.sol",
          "file": "./RETokenProxy.sol",
          "scope": 756,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 655,
        "name": "ImportDirective",
        "src": "237:28:5"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1270,
            1325,
            2360,
            2435,
            2980,
            3021,
            3143,
            3155,
            3595,
            4203
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            755,
            1270,
            1325,
            3021,
            2360,
            2980,
            3143,
            2435,
            3155,
            3595,
            4203
          ],
          "name": "RETokenStorageOne",
          "scope": 756
        },
        "children": [
          {
            "attributes": {
              "text": " @title RETokenStorage\n @dev This contract provides the storage structure for the RETokenProxy contract\n using ERC1155 and Counters structure. It also allows this contract to hold ERC1155 tokens.\n VERSION: 2 (Ver.2)\n 1. Add Event to record any REToken/USDT pair transaction done in REToken"
            },
            "id": 656,
            "name": "StructuredDocumentation",
            "src": "269:317:5"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC1155Upgradeable",
                  "referencedDeclaration": 2360,
                  "type": "contract ERC1155Upgradeable"
                },
                "id": 657,
                "name": "UserDefinedTypeName",
                "src": "618:18:5"
              }
            ],
            "id": 658,
            "name": "InheritanceSpecifier",
            "src": "618:18:5"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC1155HolderUpgradeable",
                  "referencedDeclaration": 1270,
                  "type": "contract ERC1155HolderUpgradeable"
                },
                "id": 659,
                "name": "UserDefinedTypeName",
                "src": "638:24:5"
              }
            ],
            "id": 660,
            "name": "InheritanceSpecifier",
            "src": "638:24:5"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "34b4e625",
              "mutability": "constant",
              "name": "MODERATOR",
              "scope": 755,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 662,
                "name": "ElementaryTypeName",
                "src": "1165:7:5"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_58c8e11deab7910e89bf18a1168c6e6ef28748f00fd3094549459f01cec5e0aa",
                          "typeString": "literal_string \"MODERATOR\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": -8,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 663,
                    "name": "Identifier",
                    "src": "1201:9:5"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d4f44455241544f52",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MODERATOR\"",
                      "value": "MODERATOR"
                    },
                    "id": 664,
                    "name": "Literal",
                    "src": "1211:11:5"
                  }
                ],
                "id": 665,
                "name": "FunctionCall",
                "src": "1201:22:5"
              },
              {
                "attributes": {
                  "text": " @dev Ver.1 Declaration of initial variables.\n 1. `MODERATOR` - Group of addresses possessing moderator authorization for AccessControl contract\n 2. `ADMIN_ROLE` - Group of addresses possessing admin authorization\n 3. `usdt_contract` - USDT Contract address\n 4. `usdtContract` - External connection to USDT Contract\n 5. `proxy_contract` - Proxy Contract address\n 6. `proxyContract` - External connection to Proxy Contract"
                },
                "id": 661,
                "name": "StructuredDocumentation",
                "src": "676:483:5"
              }
            ],
            "id": 666,
            "name": "VariableDeclaration",
            "src": "1165:58:5"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "75b238fc",
              "mutability": "constant",
              "name": "ADMIN_ROLE",
              "scope": 755,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 667,
                "name": "ElementaryTypeName",
                "src": "1230:7:5"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                          "typeString": "literal_string \"ADMIN_ROLE\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": -8,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 668,
                    "name": "Identifier",
                    "src": "1267:9:5"
                  },
                  {
                    "attributes": {
                      "hexvalue": "41444d494e5f524f4c45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"ADMIN_ROLE\"",
                      "value": "ADMIN_ROLE"
                    },
                    "id": 669,
                    "name": "Literal",
                    "src": "1277:12:5"
                  }
                ],
                "id": 670,
                "name": "FunctionCall",
                "src": "1267:23:5"
              }
            ],
            "id": 671,
            "name": "VariableDeclaration",
            "src": "1230:60:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "75e15838",
              "mutability": "mutable",
              "name": "usdt_contract",
              "scope": 755,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 672,
                "name": "ElementaryTypeName",
                "src": "1297:7:5"
              }
            ],
            "id": 673,
            "name": "VariableDeclaration",
            "src": "1297:28:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "usdtContract",
              "scope": 755,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract USDT",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "USDT",
                  "referencedDeclaration": 818,
                  "type": "contract USDT"
                },
                "id": 674,
                "name": "UserDefinedTypeName",
                "src": "1332:4:5"
              }
            ],
            "id": 675,
            "name": "VariableDeclaration",
            "src": "1332:17:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d84e8038",
              "mutability": "mutable",
              "name": "proxy_contract",
              "scope": 755,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address payable",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "payable",
                  "type": "address payable"
                },
                "id": 676,
                "name": "ElementaryTypeName",
                "src": "1356:15:5"
              }
            ],
            "id": 677,
            "name": "VariableDeclaration",
            "src": "1356:37:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "proxyContract",
              "scope": 755,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract RETokenProxy",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "RETokenProxy",
                  "referencedDeclaration": 554,
                  "type": "contract RETokenProxy"
                },
                "id": 678,
                "name": "UserDefinedTypeName",
                "src": "1400:12:5"
              }
            ],
            "id": 679,
            "name": "VariableDeclaration",
            "src": "1400:26:5"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "CountersUpgradeable",
                  "referencedDeclaration": 3645,
                  "type": "library CountersUpgradeable"
                },
                "id": 680,
                "name": "UserDefinedTypeName",
                "src": "1549:19:5"
              },
              {
                "attributes": {
                  "name": "CountersUpgradeable.Counter",
                  "referencedDeclaration": 3605,
                  "type": "struct CountersUpgradeable.Counter"
                },
                "id": 681,
                "name": "UserDefinedTypeName",
                "src": "1573:27:5"
              }
            ],
            "id": 682,
            "name": "UsingForDirective",
            "src": "1543:58:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_tokenIds",
              "scope": 755,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct CountersUpgradeable.Counter",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "CountersUpgradeable.Counter",
                  "referencedDeclaration": 3605,
                  "type": "struct CountersUpgradeable.Counter"
                },
                "id": 683,
                "name": "UserDefinedTypeName",
                "src": "1607:27:5"
              }
            ],
            "id": 684,
            "name": "VariableDeclaration",
            "src": "1607:46:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "ad0cdd89",
              "mutability": "mutable",
              "name": "_tokenID",
              "scope": 755,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 685,
                "name": "ElementaryTypeName",
                "src": "1660:7:5"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ],
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "uint256",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        null
                      ],
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "current",
                      "referencedDeclaration": 3616,
                      "type": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 684,
                          "type": "struct CountersUpgradeable.Counter storage ref",
                          "value": "_tokenIds"
                        },
                        "id": 686,
                        "name": "Identifier",
                        "src": "1686:9:5"
                      }
                    ],
                    "id": 687,
                    "name": "MemberAccess",
                    "src": "1686:17:5"
                  }
                ],
                "id": 688,
                "name": "FunctionCall",
                "src": "1686:19:5"
              }
            ],
            "id": 689,
            "name": "VariableDeclaration",
            "src": "1660:45:5"
          },
          {
            "attributes": {
              "canonicalName": "RETokenStorageOne.REToken",
              "name": "REToken",
              "scope": 755,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "scope": 698,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 690,
                    "name": "ElementaryTypeName",
                    "src": "1871:7:5"
                  }
                ],
                "id": 691,
                "name": "VariableDeclaration",
                "src": "1871:19:5"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "scope": 698,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 692,
                    "name": "ElementaryTypeName",
                    "src": "1901:7:5"
                  }
                ],
                "id": 693,
                "name": "VariableDeclaration",
                "src": "1901:13:5"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "valuationReport",
                  "scope": 698,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 694,
                    "name": "ElementaryTypeName",
                    "src": "1925:6:5"
                  }
                ],
                "id": 695,
                "name": "VariableDeclaration",
                "src": "1925:22:5"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "legalContract",
                  "scope": 698,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 696,
                    "name": "ElementaryTypeName",
                    "src": "1958:6:5"
                  }
                ],
                "id": 697,
                "name": "VariableDeclaration",
                "src": "1958:20:5"
              }
            ],
            "id": 698,
            "name": "StructDefinition",
            "src": "1845:141:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "reToken",
              "scope": 755,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct RETokenStorageOne.REToken)",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct RETokenStorageOne.REToken)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 699,
                    "name": "ElementaryTypeName",
                    "src": "2001:7:5"
                  },
                  {
                    "attributes": {
                      "name": "REToken",
                      "referencedDeclaration": 698,
                      "type": "struct RETokenStorageOne.REToken"
                    },
                    "id": 700,
                    "name": "UserDefinedTypeName",
                    "src": "2012:7:5"
                  }
                ],
                "id": 701,
                "name": "Mapping",
                "src": "1992:28:5"
              }
            ],
            "id": 702,
            "name": "VariableDeclaration",
            "src": "1992:36:5"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "RETokenID"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Declaration of new Event to record created token details for REToken\n @param id - Unique token ID\n @param totalSupply - Number of tokens for unique token ID\n @param owner - Asset Owner wallet address\n @param valuationReport - File Hash of Valuation Report\n @param legalContract - File Hash of Legal Contract"
                },
                "id": 703,
                "name": "StructuredDocumentation",
                "src": "2038:376:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 715,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 704,
                        "name": "ElementaryTypeName",
                        "src": "2436:7:5"
                      }
                    ],
                    "id": 705,
                    "name": "VariableDeclaration",
                    "src": "2436:18:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "scope": 715,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 706,
                        "name": "ElementaryTypeName",
                        "src": "2456:7:5"
                      }
                    ],
                    "id": 707,
                    "name": "VariableDeclaration",
                    "src": "2456:27:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "owner",
                      "scope": 715,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 708,
                        "name": "ElementaryTypeName",
                        "src": "2485:7:5"
                      }
                    ],
                    "id": 709,
                    "name": "VariableDeclaration",
                    "src": "2485:21:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "valuationReport",
                      "scope": 715,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 710,
                        "name": "ElementaryTypeName",
                        "src": "2508:6:5"
                      }
                    ],
                    "id": 711,
                    "name": "VariableDeclaration",
                    "src": "2508:22:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "legalContract",
                      "scope": 715,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 712,
                        "name": "ElementaryTypeName",
                        "src": "2532:6:5"
                      }
                    ],
                    "id": 713,
                    "name": "VariableDeclaration",
                    "src": "2532:20:5"
                  }
                ],
                "id": 714,
                "name": "ParameterList",
                "src": "2435:118:5"
              }
            ],
            "id": 715,
            "name": "EventDefinition",
            "src": "2420:134:5"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "__ERC1155_init",
              "scope": 755,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Functions for ERC1155 Token\n 1. __ERC1155_init - Construct the ERC1155 token with URI\n 2. incrementTokenId() - Increase `tokenID` by 1 before minting new token"
                },
                "id": 716,
                "name": "StructuredDocumentation",
                "src": "2562:199:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 717,
                "name": "ParameterList",
                "src": "2790:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 720,
                "name": "ParameterList",
                "src": "2814:0:5"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 4186,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 718,
                    "name": "Identifier",
                    "src": "2793:11:5"
                  }
                ],
                "id": 719,
                "name": "ModifierInvocation",
                "src": "2793:11:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7ec884005926e7014d3c77574bc6bff7970c7c17a859b212d9b39ba93bdc6860",
                                  "typeString": "literal_string \"https://token-cdn-domain/{id}.json\""
                                }
                              ],
                              "overloadedDeclarations": [
                                726,
                                1391
                              ],
                              "referencedDeclaration": 1391,
                              "type": "function (string memory)",
                              "value": "__ERC1155_init"
                            },
                            "id": 721,
                            "name": "Identifier",
                            "src": "2825:14:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "68747470733a2f2f746f6b656e2d63646e2d646f6d61696e2f7b69647d2e6a736f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"https://token-cdn-domain/{id}.json\"",
                              "value": "https://token-cdn-domain/{id}.json"
                            },
                            "id": 722,
                            "name": "Literal",
                            "src": "2840:36:5"
                          }
                        ],
                        "id": 723,
                        "name": "FunctionCall",
                        "src": "2825:52:5"
                      }
                    ],
                    "id": 724,
                    "name": "ExpressionStatement",
                    "src": "2825:52:5"
                  }
                ],
                "id": 725,
                "name": "Block",
                "src": "2814:71:5"
              }
            ],
            "id": 726,
            "name": "FunctionDefinition",
            "src": "2767:118:5"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "incrementTokenId",
              "scope": 755,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 727,
                "name": "ParameterList",
                "src": "2918:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 728,
                "name": "ParameterList",
                "src": "2930:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "increment",
                              "referencedDeclaration": 3628,
                              "type": "function (struct CountersUpgradeable.Counter storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 684,
                                  "type": "struct CountersUpgradeable.Counter storage ref",
                                  "value": "_tokenIds"
                                },
                                "id": 729,
                                "name": "Identifier",
                                "src": "2941:9:5"
                              }
                            ],
                            "id": 731,
                            "name": "MemberAccess",
                            "src": "2941:19:5"
                          }
                        ],
                        "id": 732,
                        "name": "FunctionCall",
                        "src": "2941:21:5"
                      }
                    ],
                    "id": 733,
                    "name": "ExpressionStatement",
                    "src": "2941:21:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 689,
                              "type": "uint256",
                              "value": "_tokenID"
                            },
                            "id": 734,
                            "name": "Identifier",
                            "src": "2973:8:5"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "current",
                                  "referencedDeclaration": 3616,
                                  "type": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 684,
                                      "type": "struct CountersUpgradeable.Counter storage ref",
                                      "value": "_tokenIds"
                                    },
                                    "id": 735,
                                    "name": "Identifier",
                                    "src": "2984:9:5"
                                  }
                                ],
                                "id": 736,
                                "name": "MemberAccess",
                                "src": "2984:17:5"
                              }
                            ],
                            "id": 737,
                            "name": "FunctionCall",
                            "src": "2984:19:5"
                          }
                        ],
                        "id": 738,
                        "name": "Assignment",
                        "src": "2973:30:5"
                      }
                    ],
                    "id": 739,
                    "name": "ExpressionStatement",
                    "src": "2973:30:5"
                  }
                ],
                "id": 740,
                "name": "Block",
                "src": "2930:81:5"
              }
            ],
            "id": 741,
            "name": "FunctionDefinition",
            "src": "2893:118:5"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "RETokenUSDT"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Ver.2 Declaration of new Event to record all USDT transactions for REToken\n @param id - Unique token ID purchased\n @param tokenAmt - Number of tokens for unique token ID purchased\n @param buyer - Buyer wallet address\n @param seller - Seller wallet address\n @param USDT - Total amount of USDT paid by buyer"
                },
                "id": 742,
                "name": "StructuredDocumentation",
                "src": "3019:374:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 754,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 743,
                        "name": "ElementaryTypeName",
                        "src": "3417:7:5"
                      }
                    ],
                    "id": 744,
                    "name": "VariableDeclaration",
                    "src": "3417:18:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "tokenAmt",
                      "scope": 754,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 745,
                        "name": "ElementaryTypeName",
                        "src": "3437:7:5"
                      }
                    ],
                    "id": 746,
                    "name": "VariableDeclaration",
                    "src": "3437:16:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "buyer",
                      "scope": 754,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 747,
                        "name": "ElementaryTypeName",
                        "src": "3455:7:5"
                      }
                    ],
                    "id": 748,
                    "name": "VariableDeclaration",
                    "src": "3455:21:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "seller",
                      "scope": 754,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 749,
                        "name": "ElementaryTypeName",
                        "src": "3478:7:5"
                      }
                    ],
                    "id": 750,
                    "name": "VariableDeclaration",
                    "src": "3478:22:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "USDT",
                      "scope": 754,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 751,
                        "name": "ElementaryTypeName",
                        "src": "3502:7:5"
                      }
                    ],
                    "id": 752,
                    "name": "VariableDeclaration",
                    "src": "3502:12:5"
                  }
                ],
                "id": 753,
                "name": "ParameterList",
                "src": "3416:99:5"
              }
            ],
            "id": 754,
            "name": "EventDefinition",
            "src": "3399:117:5"
          }
        ],
        "id": 755,
        "name": "ContractDefinition",
        "src": "588:2931:5"
      }
    ],
    "id": 756,
    "name": "SourceUnit",
    "src": "35:3484:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-18T05:45:08.151Z",
  "devdoc": {
    "details": "This contract provides the storage structure for the RETokenProxy contract using ERC1155 and Counters structure. It also allows this contract to hold ERC1155 tokens. VERSION: 2 (Ver.2) 1. Add Event to record any REToken/USDT pair transaction done in REToken",
    "events": {
      "RETokenID(uint256,uint256,address,string,string)": {
        "details": "Declaration of new Event to record created token details for REToken",
        "params": {
          "id": "- Unique token ID",
          "legalContract": "- File Hash of Legal Contract",
          "owner": "- Asset Owner wallet address",
          "totalSupply": "- Number of tokens for unique token ID",
          "valuationReport": "- File Hash of Valuation Report"
        }
      },
      "RETokenUSDT(uint256,uint256,address,address,uint256)": {
        "details": "Ver.2 Declaration of new Event to record all USDT transactions for REToken",
        "params": {
          "USDT": "- Total amount of USDT paid by buyer",
          "buyer": "- Buyer wallet address",
          "id": "- Unique token ID purchased",
          "seller": "- Seller wallet address",
          "tokenAmt": "- Number of tokens for unique token ID purchased"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "stateVariables": {
      "MODERATOR": {
        "details": "Ver.1 Declaration of initial variables. 1. `MODERATOR` - Group of addresses possessing moderator authorization for AccessControl contract 2. `ADMIN_ROLE` - Group of addresses possessing admin authorization 3. `usdt_contract` - USDT Contract address 4. `usdtContract` - External connection to USDT Contract 5. `proxy_contract` - Proxy Contract address 6. `proxyContract` - External connection to Proxy Contract"
      }
    },
    "title": "RETokenStorage",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}